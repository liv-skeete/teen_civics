name: Weekly TeenCivics Digest

on:
#  schedule:
#    - cron: '0 9 * * 0'  # Run at 9:00 AM UTC every Sunday
  workflow_dispatch:  # Allow manual triggering

jobs:
  weekly-digest:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    services:
      # Start PostgreSQL for testing and migration
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: teencivics_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Secret scan
      run: |
        python scripts/secret_scan.py

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install PostgreSQL driver for migration
        pip install psycopg2-binary

    - name: Setup environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/teencivics_test" >> $GITHUB_ENV
        echo "TESTING=true" >> $GITHUB_ENV

    - name: Initialize database
      run: |
        python -c "
        from src.load_env import load_env
        from src.database.db import init_db
        load_env()
        init_db();
        print('Database initialized successfully')
        "

    - name: Run weekly digest
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 2
        retry_wait_seconds: 60
        command: |
          python src/weekly_digest.py
      env:
        CONGRESS_API_KEY: ${{ secrets.CONGRESS_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/teencivics_test
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Weekly digest failed after retries"
        echo "::error::Weekly digest workflow failed. Check logs for details."

    - name: Archive migration log (if exists)
      if: always()
      run: |
        if [ -f migration.log ]; then
          echo "Migration log found, archiving..."
          cp migration.log migration_$(date +%Y%m%d_%H%M%S).log
        fi